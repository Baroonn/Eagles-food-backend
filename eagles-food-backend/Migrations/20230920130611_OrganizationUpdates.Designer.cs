// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eagles_food_backend.Data;

#nullable disable

namespace eagles_food_backend.Migrations
{
    [DbContext(typeof(LunchDbContext))]
    [Migration("20230920130611_OrganizationUpdates")]
    partial class OrganizationUpdates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("eagles_food_backend.Domains.Models.Invite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.Lunch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Organizationid")
                        .HasColumnType("int");

                    b.Property<int?>("Organizationid1")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Organizationid");

                    b.HasIndex("Organizationid1");

                    b.ToTable("Lunches");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.Organization", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("lunch_price")
                        .HasColumnType("double");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.OrganizationWallet", b =>
                {
                    b.Property<long>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<double>("Balance")
                        .HasColumnType("double");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("WalletId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationWallets");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("bank_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("bank_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("bank_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_admin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("organizationId")
                        .HasColumnType("int");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password_salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("profile_picture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("refresh_token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("organizationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.Withdrawal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.Property<double>("amount")
                        .HasColumnType("double");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("Withdrawals");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.Invite", b =>
                {
                    b.HasOne("eagles_food_backend.Domains.Models.Organization", "organization")
                        .WithMany("invitations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("organization");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.Lunch", b =>
                {
                    b.HasOne("eagles_food_backend.Domains.Models.Organization", null)
                        .WithMany("recieved_lunches")
                        .HasForeignKey("Organizationid");

                    b.HasOne("eagles_food_backend.Domains.Models.Organization", null)
                        .WithMany("sent_lunches")
                        .HasForeignKey("Organizationid1");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.OrganizationWallet", b =>
                {
                    b.HasOne("eagles_food_backend.Domains.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.User", b =>
                {
                    b.HasOne("eagles_food_backend.Domains.Models.Organization", "Organization")
                        .WithMany("users")
                        .HasForeignKey("organizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.Withdrawal", b =>
                {
                    b.HasOne("eagles_food_backend.Domains.Models.User", "User")
                        .WithMany("withdrawals")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.Organization", b =>
                {
                    b.Navigation("invitations");

                    b.Navigation("recieved_lunches");

                    b.Navigation("sent_lunches");

                    b.Navigation("users");
                });

            modelBuilder.Entity("eagles_food_backend.Domains.Models.User", b =>
                {
                    b.Navigation("withdrawals");
                });
#pragma warning restore 612, 618
        }
    }
}
